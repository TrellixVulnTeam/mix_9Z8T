#!/usr/bin/env python3

import os
import sys
import json
import string
import collections

import urllib.request as ur

S = frozenset(string.ascii_letters + string.digits)

def flt(s):
    for c in s:
        if c in S:
            yield c

def tok(s):
    t = ''

    for ch in ('^' + ''.join(flt(s)) + '^^'):
        if len(t) == 4:
            yield t
            t = t[1:] + ch
        else:
            t += ch

def it_words():
    dd = sys.argv[1]

    for a, b, c in os.walk(dd):
        if '.git' in a:
            continue

        for _ in b:
            yield {'t': 'f', 'v': os.path.join(a, _)[len(dd) + 1:]}
            yield {'t': 'e', 'v': _}

        for p in c:
            pp = os.path.join(a, p)

            try:
                with open(pp) as ff:
                    for l in ff.read().split('\n'):
                        if 'https:' in l:
                            yield {'t': 'f', 'v': l.strip()}
            except UnicodeDecodeError as e:
                print(f'skip {pp} cause of {e}')

toks = collections.defaultdict(int)
exac = set()

for w in it_words():
    # print(f'{w}')

    if w['t'] == 'e':
        exac.add(w['v'])
    else:
        for i in tok(w['v']):
            toks[i] += 1

good = set()

for w, c in toks.items():
    if c < 3:
        good.add(w)

def fetch():
    return ur.urlopen('https://repology.org/api/experimental/updates').read()

def exact_m(p):
    return p in exac or p.replace('lib', '') in exac

def fuzzy_m(words):
    inter = frozenset(tok(words)) & good

    if len(inter) > 1:
        w = len(inter) / len(words)

        # print(f'{w} {inter} {words}')

        if w > 0.3:
            return True

    return False

for x in json.loads(fetch().decode()):
    p = x['project']

    if ':' in p:
        continue

    v = ' '.join(x['versions'])

    if exact_m(p) or fuzzy_m(p + v):
        print(f'{p} {v}')
